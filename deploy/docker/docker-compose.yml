version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: postgres_db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test:
      interval: 5s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:6.0
    container_name: mongo_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  redis:
    image: redis:7-alpine
    container_name: redis_cache
    ports:
      - "6379:6379"
    healthcheck:
      test:
      interval: 5s
      timeout: 5s
      retries: 5

  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v23.1.2
    container_name: redpanda_kafka
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --node-id 0
      - --kafka-addr PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr PLAINTEXT://redpanda:29092,OUTSIDE://localhost:9092
    ports:
      - "9092:9092"
      - "29092:29092"

  minio:
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    container_name: minio_s3
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.11.1
    container_name: mlflow_server
    ports:
      - "5000:5000"
    command: >
      mlflow server
      --host 0.0.0.0
      --port 5000
      --backend-store-uri postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/mlflow_db
      --default-artifact-root s3://${MINIO_MLFLOW_BUCKET}/
    environment:
      - AWS_ACCESS_KEY_ID=${MINIO_ROOT_USER}
      - AWS_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD}
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
    depends_on:
      - postgres
      - minio

  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: prometheus_monitor
    ports:
      - "9090:9090"
    volumes:
      -./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  grafana:
    image: grafana/grafana:9.5.2
    container_name: grafana_dashboard
    ports:
      - "3000:3000"
    volumes:
      -./monitoring/grafana/provisioning:/etc/grafana/provisioning
      -./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin

volumes:
  postgres_data:
  mongodb_data:
  minio_data:
  prometheus_data:
  grafana_data: